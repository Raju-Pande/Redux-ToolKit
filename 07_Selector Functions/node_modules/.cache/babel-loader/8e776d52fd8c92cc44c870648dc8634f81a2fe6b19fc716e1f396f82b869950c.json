{"ast":null,"code":"var _jsxFileName = \"D:\\\\vsCode\\\\React\\\\Redux ToolKit\\\\07_Selector Functions\\\\src\\\\components\\\\Time.js\",\n  _this = this,\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { incrementTimer, timerSelector } from \"../redux/reducers/timerReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var Time = function Time() {\n  _s();\n  var dispatch = useDispatch();\n  // refactor to use the selector function\n  var _useSelector = useSelector(timerSelector),\n    isRunning = _useSelector.isRunning,\n    elapsedTime = _useSelector.elapsedTime;\n  useEffect(function () {\n    var interval;\n    if (isRunning) {\n      interval = setInterval(function () {\n        dispatch(incrementTimer());\n      }, 1000);\n    }\n    return function () {\n      clearInterval(interval);\n    };\n  }, [isRunning, dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"b\", {\n    children: elapsedTime\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 10\n  }, _this);\n};\n_s(Time, \"oGFg/7kpWj5vtzyF1DYxG9oAWmc=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Time;\nvar _c;\n$RefreshReg$(_c, \"Time\");","map":{"version":3,"names":["useEffect","useDispatch","useSelector","incrementTimer","timerSelector","jsxDEV","_jsxDEV","Time","_s","dispatch","_useSelector","isRunning","elapsedTime","interval","setInterval","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","_this","_c","$RefreshReg$"],"sources":["D:/vsCode/React/Redux ToolKit/07_Selector Functions/src/components/Time.js"],"sourcesContent":["import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { incrementTimer, timerSelector } from \"../redux/reducers/timerReducer\";\r\n\r\nexport const Time = () => {\r\n  const dispatch = useDispatch();\r\n  // refactor to use the selector function\r\n  const { isRunning, elapsedTime } = useSelector(timerSelector);\r\n\r\n  useEffect(() => {\r\n    let interval;\r\n    if (isRunning) {\r\n      interval = setInterval(() => {\r\n        dispatch(incrementTimer());\r\n      }, 1000);\r\n    }\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, [isRunning, dispatch]);\r\n\r\n  return <b>{elapsedTime}</b>;\r\n};\r\n"],"mappings":";;;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,cAAc,EAAEC,aAAa,QAAQ,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/E,OAAO,IAAMC,IAAI,GAAG,SAAPA,IAAIA,CAAA,EAAS;EAAAC,EAAA;EACxB,IAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B;EACA,IAAAS,YAAA,GAAmCR,WAAW,CAACE,aAAa,CAAC;IAArDO,SAAS,GAAAD,YAAA,CAATC,SAAS;IAAEC,WAAW,GAAAF,YAAA,CAAXE,WAAW;EAE9BZ,SAAS,CAAC,YAAM;IACd,IAAIa,QAAQ;IACZ,IAAIF,SAAS,EAAE;MACbE,QAAQ,GAAGC,WAAW,CAAC,YAAM;QAC3BL,QAAQ,CAACN,cAAc,CAAC,CAAC,CAAC;MAC5B,CAAC,EAAE,IAAI,CAAC;IACV;IACA,OAAO,YAAM;MACXY,aAAa,CAACF,QAAQ,CAAC;IACzB,CAAC;EACH,CAAC,EAAE,CAACF,SAAS,EAAEF,QAAQ,CAAC,CAAC;EAEzB,oBAAOH,OAAA;IAAAU,QAAA,EAAIJ;EAAW;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,GAAAC,KAAI,CAAC;AAC7B,CAAC;AAACb,EAAA,CAlBWD,IAAI;EAAA,QACEN,WAAW,EAEOC,WAAW;AAAA;AAAAoB,EAAA,GAHnCf,IAAI;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}