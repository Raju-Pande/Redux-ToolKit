{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nvar INITIAL_STATE = {\n  elapsedTime: 0,\n  isRunning: false\n};\nvar timerSlice = createSlice({\n  name: \"timer\",\n  initialState: INITIAL_STATE,\n  reducers: {\n    startTimer: function startTimer(state, action) {\n      state.isRunning = true;\n    },\n    pauseTimer: function pauseTimer(state, action) {\n      state.isRunning = false;\n    },\n    resetTimer: function resetTimer(state, action) {\n      state.isRunning = false;\n      state.elapsedTime = 0;\n    },\n    incrementTimer: function incrementTimer(state, action) {\n      ++state.elapsedTime;\n    }\n  }\n});\nexport var timerReducer = timerSlice.reducer;\nvar _timerSlice$actions = timerSlice.actions,\n  startTimer = _timerSlice$actions.startTimer,\n  pauseTimer = _timerSlice$actions.pauseTimer,\n  resetTimer = _timerSlice$actions.resetTimer,\n  incrementTimer = _timerSlice$actions.incrementTimer;\nexport { startTimer, pauseTimer, resetTimer, incrementTimer };\nexport var timerSelector = function timerSelector(state) {\n  return state.timerReducer;\n};","map":{"version":3,"names":["createSlice","INITIAL_STATE","elapsedTime","isRunning","timerSlice","name","initialState","reducers","startTimer","state","action","pauseTimer","resetTimer","incrementTimer","timerReducer","reducer","_timerSlice$actions","actions","timerSelector"],"sources":["D:/vsCode/React/Redux ToolKit/12_Alerts with extraReducers/src/redux/reducers/timerReducer.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst INITIAL_STATE = { elapsedTime: 0, isRunning: false };\r\n\r\nconst timerSlice = createSlice({\r\n  name: \"timer\",\r\n  initialState: INITIAL_STATE,\r\n  reducers: {\r\n    startTimer: (state, action) => {\r\n      state.isRunning = true;\r\n    },\r\n    pauseTimer: (state, action) => {\r\n      state.isRunning = false;\r\n    },\r\n    resetTimer: (state, action) => {\r\n      state.isRunning = false;\r\n      state.elapsedTime = 0;\r\n    },\r\n    incrementTimer: (state, action) => {\r\n      ++state.elapsedTime;\r\n    }\r\n  }\r\n});\r\n\r\nexport const timerReducer = timerSlice.reducer;\r\nexport const {\r\n  startTimer,\r\n  pauseTimer,\r\n  resetTimer,\r\n  incrementTimer\r\n} = timerSlice.actions;\r\n\r\nexport const timerSelector = (state) => state.timerReducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,IAAMC,aAAa,GAAG;EAAEC,WAAW,EAAE,CAAC;EAAEC,SAAS,EAAE;AAAM,CAAC;AAE1D,IAAMC,UAAU,GAAGJ,WAAW,CAAC;EAC7BK,IAAI,EAAE,OAAO;EACbC,YAAY,EAAEL,aAAa;EAC3BM,QAAQ,EAAE;IACRC,UAAU,EAAE,SAAAA,WAACC,KAAK,EAAEC,MAAM,EAAK;MAC7BD,KAAK,CAACN,SAAS,GAAG,IAAI;IACxB,CAAC;IACDQ,UAAU,EAAE,SAAAA,WAACF,KAAK,EAAEC,MAAM,EAAK;MAC7BD,KAAK,CAACN,SAAS,GAAG,KAAK;IACzB,CAAC;IACDS,UAAU,EAAE,SAAAA,WAACH,KAAK,EAAEC,MAAM,EAAK;MAC7BD,KAAK,CAACN,SAAS,GAAG,KAAK;MACvBM,KAAK,CAACP,WAAW,GAAG,CAAC;IACvB,CAAC;IACDW,cAAc,EAAE,SAAAA,eAACJ,KAAK,EAAEC,MAAM,EAAK;MACjC,EAAED,KAAK,CAACP,WAAW;IACrB;EACF;AACF,CAAC,CAAC;AAEF,OAAO,IAAMY,YAAY,GAAGV,UAAU,CAACW,OAAO;AACvC,IAAAC,mBAAA,GAKHZ,UAAU,CAACa,OAAO;EAJpBT,UAAU,GAAAQ,mBAAA,CAAVR,UAAU;EACVG,UAAU,GAAAK,mBAAA,CAAVL,UAAU;EACVC,UAAU,GAAAI,mBAAA,CAAVJ,UAAU;EACVC,cAAc,GAAAG,mBAAA,CAAdH,cAAc;AACO,SAAAL,UAAA,EAAAG,UAAA,EAAAC,UAAA,EAAAC,cAAA;AAEvB,OAAO,IAAMK,aAAa,GAAG,SAAhBA,aAAaA,CAAIT,KAAK;EAAA,OAAKA,KAAK,CAACK,YAAY;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}